registers = []
includes = []

Dir["src/**/*.h"].each { |file|
    src = File.read(file)
    expressions = false
    src.scan(/^.*?CC_EXPRESSION_EVALUATOR\(.*?\).*/).each { |function|
        atoms = function[/(?<=CC_EXPRESSION_EVALUATOR\().*?(?=\))/].strip
        func = function[/(?<=CCExpression).*?(?=\()/]

        if func == nil
            break
        else
            expressions = true
            func.strip!
        end

        if atoms.chr == '"'
            atoms = atoms.scan(/\".*?\"/).map { |atom| atom[/(?<=\").*?(?=\")/] }
        else
            atoms = atoms.split(',').map { |s| s.strip }
        end

        atoms.each { |atom|
            registers << "CCExpressionEvaluatorRegister(CC_STRING(\"#{atom}\"), #{func});"
        }
    }

    if expressions
        includes << "#include \"#{file.split('/').last}\""
    end
}


src = """
//This file is automatically generated, modifications will be lost!
#define CC_QUICK_COMPILE
#include \"ExpressionSetup.h\"
#include \"ExpressionEvaluator.h\"

#{includes.join("\n")}

void CCExpressionSetup(void)
{
    #{registers.join("\n    ")}
}
""".lstrip

File.write('src/setup/ExpressionSetup.c', src)
